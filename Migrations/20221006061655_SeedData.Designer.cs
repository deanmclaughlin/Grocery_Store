// <auto-generated />
using ClassroomStart.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClassroomStart.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20221006061655_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8_general_ci")
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8");

            modelBuilder.Entity("ClassroomStart.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .HasColumnType("int(10)")
                        .HasColumnName("CustomerID");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("HomeAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<long>("PhoneNumber")
                        .HasColumnType("bigint(10)");

                    b.HasKey("CustomerId");

                    b.ToTable("customer");
                });

            modelBuilder.Entity("ClassroomStart.Models.Inventory", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int(10)")
                        .HasColumnName("ProductID");

                    b.Property<bool>("IsDiscontinued")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("QuantityOnHand")
                        .HasColumnType("int(6)");

                    b.Property<decimal>("SalePrice")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("ProductId");

                    b.ToTable("inventory");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            IsDiscontinued = false,
                            ProductName = "Apples",
                            QuantityOnHand = 150,
                            SalePrice = 1.50m
                        },
                        new
                        {
                            ProductId = 2,
                            IsDiscontinued = false,
                            ProductName = "Oranges",
                            QuantityOnHand = 50,
                            SalePrice = 1.25m
                        },
                        new
                        {
                            ProductId = 3,
                            IsDiscontinued = false,
                            ProductName = "Bananas",
                            QuantityOnHand = 95,
                            SalePrice = 0.99m
                        },
                        new
                        {
                            ProductId = 4,
                            IsDiscontinued = false,
                            ProductName = "Bread",
                            QuantityOnHand = 85,
                            SalePrice = 3.50m
                        },
                        new
                        {
                            ProductId = 5,
                            IsDiscontinued = false,
                            ProductName = "Milk",
                            QuantityOnHand = 99,
                            SalePrice = 6.50m
                        },
                        new
                        {
                            ProductId = 6,
                            IsDiscontinued = false,
                            ProductName = "Eggs",
                            QuantityOnHand = 250,
                            SalePrice = 5.35m
                        },
                        new
                        {
                            ProductId = 7,
                            IsDiscontinued = false,
                            ProductName = "Bacon",
                            QuantityOnHand = 100,
                            SalePrice = 8.99m
                        },
                        new
                        {
                            ProductId = 8,
                            IsDiscontinued = false,
                            ProductName = "Coffee",
                            QuantityOnHand = 88,
                            SalePrice = 12.50m
                        },
                        new
                        {
                            ProductId = 9,
                            IsDiscontinued = false,
                            ProductName = "Ground Beef",
                            QuantityOnHand = 75,
                            SalePrice = 17.55m
                        },
                        new
                        {
                            ProductId = 10,
                            IsDiscontinued = false,
                            ProductName = "Steak",
                            QuantityOnHand = 75,
                            SalePrice = 20.25m
                        },
                        new
                        {
                            ProductId = 11,
                            IsDiscontinued = false,
                            ProductName = "Sausage",
                            QuantityOnHand = 110,
                            SalePrice = 7.25m
                        },
                        new
                        {
                            ProductId = 12,
                            IsDiscontinued = false,
                            ProductName = "Lettuce",
                            QuantityOnHand = 70,
                            SalePrice = 1.99m
                        },
                        new
                        {
                            ProductId = 13,
                            IsDiscontinued = false,
                            ProductName = "Tomato",
                            QuantityOnHand = 91,
                            SalePrice = 0.89m
                        },
                        new
                        {
                            ProductId = 14,
                            IsDiscontinued = false,
                            ProductName = "Potato",
                            QuantityOnHand = 88,
                            SalePrice = 0.55m
                        },
                        new
                        {
                            ProductId = 15,
                            IsDiscontinued = false,
                            ProductName = "Spinach",
                            QuantityOnHand = 45,
                            SalePrice = 1.05m
                        });
                });

            modelBuilder.Entity("ClassroomStart.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(10)")
                        .HasColumnName("orderID");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int(10)")
                        .HasColumnName("customer_id");

                    b.Property<int>("ProductId")
                        .HasColumnType("int(10)")
                        .HasColumnName("product_id");

                    b.Property<int>("QuantitySold")
                        .HasColumnType("int(6)");

                    b.Property<decimal>("TotalPrice")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("OrderId");

                    b.HasIndex(new[] { "CustomerId" }, "customer_id");

                    b.HasIndex(new[] { "ProductId" }, "product_id");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("ClassroomStart.Models.Order", b =>
                {
                    b.HasOne("ClassroomStart.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClassroomStart.Models.Inventory", "Inventory")
                        .WithMany("Orders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Inventory");
                });

            modelBuilder.Entity("ClassroomStart.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("ClassroomStart.Models.Inventory", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
